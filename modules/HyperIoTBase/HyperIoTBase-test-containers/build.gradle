configurations {
    includeInJar {
        canBeResolved(true)
        canBeConsumed(false)
    }
}

dependencies {
    //OSGi Basic Imports
    implementation group: "org.osgi", name: "osgi.core", version: project.osgiVersion
    implementation group: "org.osgi", name: "osgi.cmpn", version: project.osgiCompendiumVersion
    //SLF4J
    implementation group: 'org.slf4j', name: 'slf4j-api', version: project.slf4jVersion
    implementation group: 'org.testcontainers', name: 'testcontainers', version: project.testContainersVersion
    includeInJar group: 'org.testcontainers', name: 'testcontainers', version: project.testContainersVersion
    implementation group: 'com.github.docker-java', name: 'docker-java-api', version: project.dockerJavaApiVersion
    includeInJar group: 'com.github.docker-java', name: 'docker-java-api', version: project.dockerJavaApiVersion
    implementation group: 'net.java.dev.jna', name: 'jna', version: project.jnaVersion
    includeInJar group: 'net.java.dev.jna', name: 'jna', version: project.jnaVersion
    implementation group: 'org.yaml', name: 'snakeyaml', version: 1.30
    includeInJar group: 'org.yaml', name: 'snakeyaml', version: 1.30

}

jar {
    duplicatesStrategy = duplicatesStrategy.INCLUDE
    manifest {
        attributes('dsannotations': '*')
    }
    zip64 true
    from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
}


publishing {
    publications {
        hyperiot(MavenPublication) {
            from components.java
        }
    }
}