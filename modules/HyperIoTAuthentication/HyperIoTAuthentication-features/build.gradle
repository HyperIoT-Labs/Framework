

configurations {
	authentication {
		transitive = false
	}

	authenticationRest {
		transitive = false
	}
}

dependencies {
    authentication 'it.acsoftware.hyperiot.authentication:HyperIoTAuthentication-service:'+project.version
    authenticationRest 'it.acsoftware.hyperiot.authentication:HyperIoTAuthentication-service-rest:'+project.version
}

task buildHIT(type: GradleBuild) {

}

task buildFeatures(type: GradleBuild) {
	tasks = [ 'clean','generateFeatures','build','install' ]
}

task publishHIT(type: GradleBuild) {

}

task publishFeatures(type: GradleBuild) {
	tasks = [ 'clean','generateFeatures','build','install','publish' ]
}

def featureFile = 'build/karaf/features/'+project.name+'-'+project.version+'.xml'
publishing {
    publications {
        hyperiot(MavenPublication) {
            artifactId project.name
            artifact source: featureFile, classifier: 'features'
        }
    }
 }
