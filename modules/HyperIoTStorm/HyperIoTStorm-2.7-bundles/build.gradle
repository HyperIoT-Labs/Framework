configurations {
    includeInJar {
        canBeResolved(true)
        canBeConsumed(false)
    }
}

dependencies {
    includeInJar ("org.apache.storm:storm-core:2.7.0"){
        exclude(group: "org.apache.logging.log4j")
    }

    includeInJar ("org.apache.storm:storm-kafka-client:2.7.0"){
        exclude(group: "org.apache.logging.log4j")
    }

    includeInJar ("org.apache.storm:storm-hdfs:2.7.0"){
        exclude(group: "org.apache.logging.log4j")
        transitive = false
    }

    includeInJar ("org.apache.storm:storm-hbase:2.5.0"){
        exclude(group: "org.apache.logging.log4j")
    }

    includeInJar ("org.apache.storm:flux-core:2.7.0"){
        exclude(group: "org.apache.logging.log4j")
    }

    includeInJar ("org.apache.storm:flux-wrappers:2.7.0"){
        exclude(group: "org.apache.logging.log4j")
    }

    includeInJar group: 'commons-lang', name: 'commons-lang', version: '2.6'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes('dsannotations': '*')
    }
    zip64 true
    from {
        configurations.includeInJar
                .findAll { !it.name.endsWith('pom') }
                .collect {
                    it.isDirectory() ? it : zipTree(it)
                }
            }
}


publishing {
    publications {
        hyperiot(MavenPublication) {
            from components.java
        }
    }
}
