configurations {
    includeInJar {
        canBeResolved(true)
        canBeConsumed(false)
    }
}

dependencies {
    //OSGi Basic Imports
    implementation group: "org.osgi", name: "osgi.core", version: project.osgiVersion
    implementation group: "org.osgi", name: "osgi.cmpn", version: project.osgiCompendiumVersion
    implementation group: 'org.osgi', name: 'org.osgi.framework', version: project.osgiFrameworkVersion
    //SLF4J
    implementation group: 'org.slf4j', name: 'slf4j-api', version: project.slf4jVersion

    //HyperIoTBase Dependencies
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-api", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-service", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-util", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-security", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-model", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-actions", version: project.hyperIoTVersion
    implementation group: "it.acsoftware.hyperiot.permission", name: "HyperIoTPermission-api", version: project.hyperIoTVersion
    //Validation
    implementation group: "javax.validation", name: "validation-api", version: project.javaxValidationVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: project.jacksonVersion
    // Kafka client
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: project.apacheKafkaVersion
    //Project Dependencies
    implementation project(":modules:HyperIoTStorm:HyperIoTStorm-api")
    implementation project(":modules:HyperIoTStorm:HyperIoTStorm-bundles")
    implementation ("org.apache.storm:storm-shaded-deps:"+project.stormVersion)
    includeInJar ("org.apache.storm:storm-shaded-deps:"+project.stormVersion){
        transitive false
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    zip64 true
    from {
        configurations.includeInJar.findAll { !it.name.endsWith('pom') }
                .collect {
                    it.isDirectory() ? it : zipTree(it).matching {
                        exclude '**/META-INF/**'
                    }
                }
    }
}


publishing {
    publications {
        hyperiot(MavenPublication) {
            from components.java
        }
    }
}